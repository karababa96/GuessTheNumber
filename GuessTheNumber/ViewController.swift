//
//  ViewController.swift
//  GuessTheNumber
//
//  Created by Ali Karababa on 20.03.2021.
//

import UIKit

class ViewController: UIViewController {
    
    
    var generatedNumberArray = [Int]() {
        didSet {
            print(generatedNumberArray)
        }
    }
    
    var positiveResult : Int = 0
    var negativeResult : Int = 0
    var positiveResultHistory = [String]()
    var negativeResultHistory = [String]()
    var lastResultArray = [String]()
    var gameRight : Int = 8
    var i = 0
    
    var labels = [UILabel]()
    
    var firstIndex : Int = 0
    var secondIndex : Int = 0
    var thirdIndex : Int = 0
    var fourthIndex : Int = 0

    // Numbers generated by app
    
    @IBOutlet var label1: UILabel!
    @IBOutlet var label2: UILabel!
    @IBOutlet var label3: UILabel!
    @IBOutlet var label4: UILabel!
    
        
    // Guess History Label
    
    @IBOutlet var tableView: UITableView!
    // Guess the number by me
    
    @IBOutlet var firstGuess: UITextField!
    @IBOutlet var secondGuess: UITextField!
    @IBOutlet var thirdGuess: UITextField!
    @IBOutlet var fourthGuess: UITextField!
    // Generate Button
    @IBOutlet var generateButton: UIButton!
    //
    @IBOutlet var guessButton: UIButton!
    
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        tableView.dataSource = self
        tableView.delegate = self
        guessButton.isHidden = true
        
        let gestureRecognizer  = UITapGestureRecognizer(target: self, action: #selector(hideKeyboard))
        view.addGestureRecognizer(gestureRecognizer)
        
    }
    
    @objc func hideKeyboard() {
        view.endEditing(true)
    }
    
    
    @IBAction func generateNumber(_ sender: Any) {
     
        let firstNumber = 1...9
        generatedNumberArray = [0,1,2,3,4,5,6,7,8,9]
        labels = [label2,label3,label4]
        self.firstIndex = firstNumber.randomElement()!
        let index = generatedNumberArray.firstIndex(of: firstIndex)!
        generatedNumberArray.remove(at: index)
        self.label1.text = String(firstIndex)
        self.label1.isHidden = true
       
        for label in labels {
            self.secondIndex = generatedNumberArray.randomElement()!
            let index = generatedNumberArray.firstIndex(of: secondIndex)!
            generatedNumberArray.remove(at: index)
            label.text = String(secondIndex)
            label.isHidden = true
        }
        generateButton.isHidden = true
        guessButton.isHidden = false
    }
        
    @IBAction func guessNumber(_ sender: Any) {
        guessTheNumber()
        gameRight -= 1
        if gameRight == 0 {
            guessButton.isHidden = true
            makeAlert(titleInput: "Game Over!", messageInput: "Game over you did not find correct number. Please try again!")
            
            for label in labels {
                label.isHidden = false
            }
            self.label1.isHidden = false
        }
        
           
            self.lastResultArray.insert("\(self.firstGuess.text!)\(self.secondGuess.text!)\(self.thirdGuess.text!)\(self.fourthGuess.text!)", at: i)
            i += 1
        self.firstGuess.text = ""
        self.secondGuess.text = ""
        self.thirdGuess.text = ""
        self.fourthGuess.text = ""
        print("Git")
            self.tableView.reloadData()
      
    }
    func makeAlert(titleInput : String, messageInput : String) {
        let ac = UIAlertController(title: titleInput, message: messageInput, preferredStyle: .alert)
        ac.addAction(UIAlertAction(title: "Ok", style: UIAlertAction.Style.default))
        self.present(ac, animated: true)
    }
    
    func guessTheNumber() {
        if Int(firstGuess.text!) != Int(secondGuess.text!) &&
           Int(firstGuess.text!) !=  Int(thirdGuess.text!) &&
           Int(firstGuess.text!) != Int(fourthGuess.text!) &&
           Int(secondGuess.text!) != Int(thirdGuess.text!) &&
           Int(secondGuess.text!) != Int(fourthGuess.text!) &&
           Int(thirdGuess.text!) != Int(fourthGuess.text!) &&
            firstGuess.text! != "" && secondGuess.text! != "" &&
            thirdGuess.text! != "" && fourthGuess.text! != "" &&
            Int(firstGuess.text!)! < 10 && Int(secondGuess.text!)! < 10 &&
            Int(thirdGuess.text!)! < 10 && Int(fourthGuess.text!)! < 10
            
        {
            print(label1.text!,label2.text!,label3.text!,label4.text!)
            
        switch Int(firstGuess.text!) {
        case 0:
            makeAlert(titleInput: "Not proper value", messageInput: "First digit cannot be equal to 0")
        case Int(label1.text!): self.positiveResult += 1
        case Int(label2.text!): self.negativeResult -= 1
        case Int(label3.text!): self.negativeResult -= 1
        case Int(label4.text!): self.negativeResult -= 1
        default: positiveResult += 0
        }
        switch Int(secondGuess.text!) {
        case Int(label1.text!): self.negativeResult -= 1
        case Int(label2.text!): self.positiveResult += 1
        case Int(label3.text!): self.negativeResult -= 1
        case Int(label4.text!): self.negativeResult -= 1
        default: positiveResult += 0
        }
        switch Int(thirdGuess.text!) {
        case Int(label1.text!): self.negativeResult -= 1
        case Int(label2.text!): self.negativeResult -= 1
        case Int(label3.text!): self.positiveResult += 1
        case Int(label4.text!): self.negativeResult -= 1
        default:  positiveResult += 0
        }
        switch Int(fourthGuess.text!) {
        case Int(label1.text!): self.negativeResult -= 1
        case Int(label2.text!): self.negativeResult -= 1
        case Int(label3.text!): self.negativeResult -= 1
        case Int(label4.text!): self.positiveResult += 1
        default: positiveResult += 0
            }
            if gameRight == 1 {
                
            }else {
            makeAlert(titleInput: "Your score is:", messageInput: """
                                                                            Correct Guess and Place: +\(positiveResult)
                                                                            Correct Guess but Wrong Place:\(negativeResult)
                                                                            Last Guess Number Right:\(self.gameRight - 1)
                                                                            """)
            positiveResultHistory.append(String(positiveResult))
            negativeResultHistory.append(String(negativeResult))
            
            DispatchQueue.main.async {
                self.tableView.reloadData()
            }
                }
           
            self.positiveResult = 0
            self.negativeResult = 0
            tableView.reloadData()
            
        } else {
            makeAlert(titleInput: "Same Input Error!", messageInput: "Please write a proper guess number which any digit cannot be same with other or cannot be empty")
        }
        
        if gameRight == 0 {
            makeAlert(titleInput: "Game Over", messageInput: "Your right is 0")
        }
    }
}

extension ViewController : UITableViewDelegate, UITableViewDataSource {
    
    public func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if positiveResultHistory.isEmpty == false {
            return positiveResultHistory.count
        }else {
           return 3
        }
    }
    
    public func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "Cell", for: indexPath) as! Cell
        cell.backgroundColor = UIColor(red: 0.888, green: 0.555, blue: 0.222, alpha: 0.5)
        if positiveResultHistory.isEmpty == false && negativeResultHistory.isEmpty == false {
            
            cell.positiveResultLabel.text = "+\(positiveResultHistory[indexPath.row])"
            cell.negativeResultLabel.text = negativeResultHistory[indexPath.row]
            cell.lastGuessLabel.text = lastResultArray[indexPath.row]
        }else {
            cell.negativeResultLabel.text = "..."
            cell.positiveResultLabel.text = "..."
            cell.lastGuessLabel.text = "..."
        }
        return cell
    }
}

